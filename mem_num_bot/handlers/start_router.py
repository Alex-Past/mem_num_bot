from aiogram import Router, F
from aiogram.filters import CommandStart
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, CallbackQuery
from decouple import config

from data_base.dao import set_user
from keyboards.other_kb import main_kb
from keyboards.note_kb import main_note_kb
from keyboards.mem_kb import main_mem_kb

SPACE=config("SPACE")

start_router = Router()


@start_router.message(CommandStart())
async def cmd_start(message: Message):
    await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ–¥:")

@start_router.message(F.text == SPACE)
async def process_check_space(message: Message):    
    await set_user(
        tg_id=message.from_user.id,
        username=message.from_user.username,
        full_name=message.from_user.full_name
    )
    greeting = (
        f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.username}! '
        '–í—ã–±–µ—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ'
    )
    await message.answer(greeting, reply_markup=main_kb())


@start_router.message(F.text == "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
async def mine_menu(message: Message, state: FSMContext):
    await state.clear()
    greeting = '–í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é. –í—ã–±–µ—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ'
    await message.answer(greeting, reply_markup=main_kb())


@start_router.message(F.text == "üß© –ú–µ–º–æ—Ä–∏")
async def mine_menu(message: Message, state: FSMContext):
    await state.clear()
    greeting = '–í—ã –≤ –º–æ–¥—É–ª–µ –¥–ª—è –∑–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –∫–∞—Ä—Ç–æ—á–µ–∫. –í—ã–±–µ—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ'
    await message.answer(greeting, reply_markup=main_mem_kb())


@start_router.message(F.text == "‚ùå –û—Ç–º–µ–Ω–∞")
async def stop_fsm(message: Message, state: FSMContext):
    await state.clear()
    await message.answer(
        '–°—Ü–µ–Ω–∞—Ä–∏–π –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. '
        '–î–ª—è –≤—ã–±–æ—Ä–∞ –¥–µ–π—Å—Ç–≤–∏—è –≤–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –Ω–∏–∂–µ',
        reply_markup=main_note_kb()
    )

@start_router.callback_query(F.data == 'main_menu')
async def main_menu_process(call: CallbackQuery, state: FSMContext):
    await state.clear()
    await call.answer('–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.')
    await call.message.answer(
        f'–ü—Ä–∏–≤–µ—Ç, {call.from_user.full_name}! '
        '–í—ã–±–µ—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ',
        reply_markup=main_kb()
    )
