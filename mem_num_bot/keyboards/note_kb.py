from aiogram.types import KeyboardButton, ReplyKeyboardMarkup
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton


def generate_category_keyboard(categories):
    unique_category = [_ for _ in categories]
    keyboard = InlineKeyboardMarkup(inline_keyboard=[])
    for category in unique_category:
        button = InlineKeyboardButton(
            text=category['category_name'],
            callback_data=f"category_id_{category['id']}"
        )
        keyboard.inline_keyboard.append([button])
    return keyboard


def generate_find_category_keyboard(categories):
    unique_category = [_ for _ in categories]
    keyboard = InlineKeyboardMarkup(inline_keyboard=[])
    for category in unique_category:
        button = InlineKeyboardButton(
            text=category['category_name'],
            callback_data=f"category_name_{category['category_name']}"
        )
        keyboard.inline_keyboard.append([button])
    return keyboard


def main_note_kb():
    kb_list = [
        [KeyboardButton(text="üìù –î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É"),
         KeyboardButton(text="üìí –ü—Ä–æ—Å–º–æ—Ç—Ä –∫–∞—Ä—Ç–æ—á–µ–∫")],
        [KeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")]
    ]
    return ReplyKeyboardMarkup(
        keyboard=kb_list,
        resize_keyboard=True,
        one_time_keyboard=True,
        input_field_placeholder="–í–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –º–µ–Ω—éüëá"
    )


def find_note_kb():
    kb_list = [
        [KeyboardButton(text="üìö –ö–∞—Ç–µ–≥–æ—Ä–∏–∏")],
        [KeyboardButton(text="üîç –ü–æ–∏—Å–∫ –ø–æ —Ç–µ–∫—Å—Ç—É"),
         KeyboardButton(text="üîç –ü–æ–∏—Å–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏")],
        [KeyboardButton(text="üìñ –ò–∑–º–µ–Ω–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"),
         KeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")]
    ]
    return ReplyKeyboardMarkup(
        keyboard=kb_list,
        resize_keyboard=True,
        one_time_keyboard=True,
        input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—éüëá"
    )


def rule_note_kb(note_id: int, has_file: bool = False):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–∞—Ä—Ç–æ—á–∫–æ–π."""
    buttons = [
        [InlineKeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ", callback_data=f'edit_note_text_{note_id}')],
        [InlineKeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ", callback_data=f'edit_desc_text_{note_id}')],
        [InlineKeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å —Ñ–∞–π–ª", callback_data=f'edit_file_{note_id}')],
    ]
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É —É–¥–∞–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ñ–∞–π–ª –µ—Å—Ç—å
    if has_file:
        buttons.append([InlineKeyboardButton(text="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª", callback_data=f'delete_file_{note_id}')])
    
    buttons.append([InlineKeyboardButton(text="–£–¥–∞–ª–∏—Ç—å", callback_data=f'dell_note_{note_id}')])
    
    return InlineKeyboardMarkup(inline_keyboard=buttons)


def rule_cat_kb(cat_id: int):
    return InlineKeyboardMarkup(
        inline_keyboard=[[InlineKeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å", callback_data=f'edit_cat_text_{cat_id}')],
                         [InlineKeyboardButton(text="–£–¥–∞–ª–∏—Ç—å", callback_data=f'dell_cat_{cat_id}')]])


def add_note_check():
    kb_list = [
        [KeyboardButton(text="‚úÖ –í—Å–µ –≤–µ—Ä–Ω–æ"), KeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å")]
    ]
    return ReplyKeyboardMarkup(
        keyboard=kb_list,
        resize_keyboard=True,
        one_time_keyboard=True,
        input_field_placeholder="–í–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –º–µ–Ω—éüëá"
    )


def del_check():
    kb_list = [
        [KeyboardButton(text="üóë –£–¥–∞–ª–∏—Ç—å"), KeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å")]
    ]
    return ReplyKeyboardMarkup(
        keyboard=kb_list,
        resize_keyboard=True,
        one_time_keyboard=True,
        input_field_placeholder="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µüëá"
    )


def add_category_check():
    kb_list = [
        [KeyboardButton(text="‚úÖ –î–æ–±–∞–≤–∏—Ç—å"), KeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å")]
    ]
    return ReplyKeyboardMarkup(
        keyboard=kb_list,
        resize_keyboard=True,
        one_time_keyboard=True,
        input_field_placeholder="–í–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –º–µ–Ω—éüëá"
    )


def main_category_kb():
    kb_list = [
        [KeyboardButton(text="üìó –î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é"),
         KeyboardButton(text="üìñ –ò–∑–º–µ–Ω–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏")],
        [KeyboardButton(text="üìí –ü—Ä–æ—Å–º–æ—Ç—Ä –∫–∞—Ä—Ç–æ—á–µ–∫"),
         KeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")]
    ]
    return ReplyKeyboardMarkup(
        keyboard=kb_list,
        resize_keyboard=True,
        one_time_keyboard=True,
        input_field_placeholder="–ï—Å–ª–∏ –ø–æ–¥—Ö–æ–¥—è—â–µ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ—Ç, –º–æ–∂–µ—à—å –µ–µ —Å–æ–∑–¥–∞—Ç—åüëá"
    )


def all_category_kb():
    kb_list = [
        [KeyboardButton(text="üìù –î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É"),
         KeyboardButton(text="üìó –î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é")],
        [KeyboardButton(text="üìí –ü—Ä–æ—Å–º–æ—Ç—Ä –∫–∞—Ä—Ç–æ—á–µ–∫"),
         KeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")]
    ]
    return ReplyKeyboardMarkup(
        keyboard=kb_list,
        resize_keyboard=True,
        one_time_keyboard=True,
        input_field_placeholder="–ï—Å–ª–∏ –ø–æ–¥—Ö–æ–¥—è—â–µ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ—Ç, –º–æ–∂–µ—à—å –µ–µ —Å–æ–∑–¥–∞—Ç—åüëá"
    )
