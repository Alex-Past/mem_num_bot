from aiogram.types import (
    InlineKeyboardMarkup, 
    InlineKeyboardButton,
    ReplyKeyboardMarkup,
    KeyboardButton
)


def create_categories_keyboard(categories, selected_categories=None):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π —ç–∫–∑–∞–º–µ–Ω–∞."""
    if selected_categories is None:
        selected_categories = []
    
    keyboard = []
    
    # –ö–Ω–æ–ø–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    for category in categories:
        is_selected = category['id'] in selected_categories
        emoji = "‚úÖ" if is_selected else "‚ö™Ô∏è"
        text = f"{emoji} {category['category_name']}"
        keyboard.append([
            InlineKeyboardButton(
                text=text, 
                callback_data=f"exam_category_{category['id']}"
            )
        ])
    
    # –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    keyboard.append([
        InlineKeyboardButton(text="üéØ –í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏", callback_data="exam_category_all")
    ])
    keyboard.append([
        InlineKeyboardButton(text="üöÄ –ù–∞—á–∞—Ç—å —ç–∫–∑–∞–º–µ–Ω", callback_data="start_exam")
    ])
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def create_exam_main_keyboard(has_difficult_notes: bool = False):
    """–û—Å–Ω–æ–≤–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —ç–∫–∑–∞–º–µ–Ω–∞ —Å –∫–Ω–æ–ø–∫–æ–π —Å–ª–æ–∂–Ω—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫."""
    keyboard = [
        [InlineKeyboardButton(text="üìö –í—ã–±—Ä–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏", callback_data="select_categories")],
    ]
    
    if has_difficult_notes:
        keyboard.append([
            InlineKeyboardButton(text="üéØ –ü–æ–≤—Ç–æ—Ä–∏—Ç—å —Å–ª–æ–∂–Ω—ã–µ", callback_data="difficult_notes")
        ])
    
    # keyboard.append([
    #     InlineKeyboardButton(text="üîÑ –°–ª—É—á–∞–π–Ω—ã–µ –≤—Å–µ", callback_data="random_all")
    # ])
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def create_exam_control_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —ç–∫–∑–∞–º–µ–Ω–æ–º."""
    return ReplyKeyboardMarkup(
        keyboard=[[KeyboardButton(text="‚èπ –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —ç–∫–∑–∞–º–µ–Ω")]],
        resize_keyboard=True
    )


def create_stop_exam_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Ç–æ–ª—å–∫–æ —Å –∫–Ω–æ–ø–∫–æ–π –æ—Å—Ç–∞–Ω–æ–≤–∫–∏."""
    return ReplyKeyboardMarkup(
        keyboard=[[KeyboardButton(text="‚èπ –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —ç–∫–∑–∞–º–µ–Ω")]],
        resize_keyboard=True,
        one_time_keyboard=False
    )